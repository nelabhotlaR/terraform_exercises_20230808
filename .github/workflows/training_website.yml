name: 'training website Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY_NAME }}
      
    defaults:
      run:  
        shell: bash

    steps:
    - name: set the key
      run: |  
        echo ${{ secrets.SSH_PRIVATE_KEY }} | base64 --decode > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::120666943157:role/github_workflow_terraform
        aws-region: us-east-1
    
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.6
    
    - uses: dorny/paths-filter@v2
      id: changes
      with: 
          filters: |
            src:
              - 'examples/terraform_aws_qxf2_training_website/**'
              - '.github/workflows/**'

    - name: Terraform Init
      if: steps.changes.outputs.src=='true'
      run: cd examples/terraform_aws_qxf2_training_website && terraform init

    - name: Terraform Validate
      run: cd examples/terraform_aws_qxf2_training_website && terraform validate -no-color

    - name: Terraform Plan
      run: cd examples/terraform_aws_qxf2_training_website && terraform plan -input=false

      # On push to "main", deploy the Terraform infrastructure
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: cd examples/terraform_aws_qxf2_training_website && terraform apply -auto-approve -input=false